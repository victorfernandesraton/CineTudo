/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

// MODELO PARA COMBOBOX COM FETCH
// <combobox> = new JComboBox();
// <combobox>.setModel(new DefaultComboBoxModel(<vetor_que_povoa>));
// <combobox>.setSelectedIndex(-1);
// <combobox>.setEditable(true);
// JTextField text = (JTextField)<combobox>.getEditor().getEditorComponent();
// text.setFocusable(true);
// text.setText("");
// text.addKeyListener(new ComboListener(<combobox>,<vetor_que_povoa>));
// <combobox>.setBounds(144, 56, 165, 24);
// contentPane.add(<combobox>);

package com.app;
import java.time.*;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.event.AncestorListener;
import javax.swing.event.AncestorEvent;

/**
 *
 * @author Victor
 */
public class _Graph extends javax.swing.JFrame {

    public ArrayList<Movie> movies = new ArrayList<Movie>();
    public Vector<Movie> vectorMovies = new Vector<Movie>();
    public Vector<Room> vectorRooms = new Vector<Room>();    
    public Vector<Room> vectorTicketRooms = new Vector<Room>();    
    public Vector<Session> vectorSessions = new Vector<Session>();
    public Vector<String> vectorCategory = new Vector<String>();
    public Vector<String> vectorClassification = new Vector<String>();
    public Vector<String> vectorSessionHr = new Vector<String>();
    public Vector<String> vectorSessionMin = new Vector<String>();
    public Vector<Integer> vectorSessionDays = new Vector<Integer>();
    public Vector<Integer> vectorSessionMouth = new Vector<Integer>();
    public Vector<Integer> vectorSessionYear = new Vector<Integer>();
    
    
   

    /**
     * Creates new form _Graph
     */
    public _Graph() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        Room room = new Room3d("1212",2);
		Movie movie =  new Movie(LocalTime.parse("02:30"),"Avangers: Ultimato","Tarantino","terror","Thanos is die and batmam kill all heroes of planet because her is unique hero ever exist");
        Session session = new Session(room,movie,LocalDate.parse("2019-04-12"),LocalTime.parse("14:30:00"));
        vectorMovies.add(movie);
        vectorRooms.add(room);
        // MESSES
        for (int i = 1; i <= 12; i ++) {
            vectorSessionMouth.add(i);
        }

        btnGroupType = new javax.swing.ButtonGroup();
        btnGroupMenu = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lbMenu = new javax.swing.JLabel();
        btnMovie = new javax.swing.JButton();
        btnMovie.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		btnMovieActionPerformed(e);
        	}
        });
        btnRoom = new javax.swing.JButton();
        btnRoom.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		btnRoomActionPerformed(e);
        	}
        });

        btnSession = new javax.swing.JButton();
        btnSession.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		btnSessionActionPerformed(e);
        	}
        });
        
        btnTicket = new javax.swing.JButton();
        btnTicket.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		btnTicketActionPerformed(e);
        	}
        });
        rdCreate = new javax.swing.JRadioButton();
        rdEdit = new javax.swing.JRadioButton();
        rdSearch = new javax.swing.JRadioButton();
        tbPannel = new javax.swing.JTabbedPane();
        pnMovie = new javax.swing.JPanel();
        tbMovie_title = new javax.swing.JLabel();
        tbMovie_lbTitle = new javax.swing.JLabel();
        tbMovie_tfTitle = new javax.swing.JTextField();
        tbMovie_lbDirector = new javax.swing.JLabel();
        tbMovie_tfDirector = new javax.swing.JTextField();
        tbMovie_lbCategory = new javax.swing.JLabel();
        tbMovie_lbClassification = new javax.swing.JLabel();
        tbMovie_lbDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMovie_taDescription = new javax.swing.JTextArea();
        tbMovie_lbDuration = new javax.swing.JLabel();
        tbMovie_spDurHr = new javax.swing.JSpinner();
        tbMovie_spDurHr.setModel(new SpinnerNumberModel(0, 0, 6, 1));
        jLabel9 = new javax.swing.JLabel();
        tbMovie_spDurationMin = new javax.swing.JSpinner();
        tbMovie_spDurationMin.setModel(new SpinnerNumberModel(0, 0, 59, 1));
        tbMovie_btnConfirm = new javax.swing.JButton();
        tbMovie_btnClear = new javax.swing.JButton();
        tbMovie_cbClassification = new javax.swing.JComboBox<>();
        tbMovie_cbCategory = new javax.swing.JComboBox<>();
        pmRoom = new javax.swing.JPanel();
        tbRoom_title = new javax.swing.JLabel();
        tbRoom_lbId = new javax.swing.JLabel();
        tbRoom_tfId = new javax.swing.JTextField();
        tbRoom_lbOcupation = new javax.swing.JLabel();
        tbRoom_spOcupation = new javax.swing.JSpinner();
        tbRoom_spPrice = new javax.swing.JSpinner();
        tbRoom_lbPrice = new javax.swing.JLabel();
        tbRoom_cbDefault = new javax.swing.JCheckBox();
        btnTypeContent = new javax.swing.JPanel();
        tbRoom_rdNormal = new javax.swing.JRadioButton();
        tbRoom_rd3D = new javax.swing.JRadioButton();
        
        tbRoom_lbTitle = new javax.swing.JLabel();
        tbRoom_btnConfirm = new javax.swing.JButton();
        tbRoom_btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	btnRoom_btnConfirmActionPerformed(evt);
            }
        });

        tbRoom_btnClear = new javax.swing.JButton();
        pnSession = new javax.swing.JPanel();
        tbSession_title = new javax.swing.JLabel();
        tbSession_cbMovie = new javax.swing.JComboBox<>();
        tbSession_lbRoom = new javax.swing.JLabel();
        tbSession_cbRoom = new javax.swing.JComboBox<>();
        tbSession_lbMovie = new javax.swing.JLabel();
        tbSession_lbTime = new javax.swing.JLabel();
        tbSession_cbDay = new javax.swing.JComboBox<>();
        tbSession_cbMounth = new javax.swing.JComboBox<>();
        tbSession_cbYear = new javax.swing.JComboBox<>();
        tbSession_btnConfirm = new javax.swing.JButton();
        tbSession_btnConfirm.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                tbSession_btnConfirmActionPerformed(e);
            }
        });
        tbSession_btnClear = new javax.swing.JButton();
        tbSession_lbtime = new javax.swing.JLabel();
        tbSession_cbHr = new javax.swing.JComboBox<>();
        tbSession_cbMin = new javax.swing.JComboBox<>();
        pnTicket = new javax.swing.JPanel();
        tbTicket_title = new javax.swing.JLabel();
        tbTicket_lbMovie = new javax.swing.JLabel();
        tbTicket_cbMovie = new javax.swing.JComboBox<>();
        tbTicket_lbName = new javax.swing.JLabel();
        tbTicket_tfName = new javax.swing.JTextField();
        tbTicket_lbAge = new javax.swing.JLabel();
        tbTicket_spAge = new javax.swing.JSpinner();
        tbTicket_spAge.addAncestorListener(new AncestorListener() {
        	public void ancestorAdded(AncestorEvent event) {
        	}
        	public void ancestorMoved(AncestorEvent event) {
        		double Price = 0;
                if (tbTicket_cbRoom.getSelectedItem() != null) {
                    for (Room room : vectorTicketRooms) {
                        if (room.toString().equals(tbTicket_cbRoom.getSelectedItem().toString())) {
                            Price = room.getPrice();
                        }
                    }
                    if (Integer.parseInt(tbTicket_spAge.getValue().toString()) <= 18 || tbTicket_cbStudy.isSelected()) {
                        Price = Price /2;
                    }
                    tbTickect_tfPrice.setText(Double.toString(Price));
                }
        	}
        	public void ancestorRemoved(AncestorEvent event) {
        	}
        });
        tbTicket_cbStudy = new javax.swing.JCheckBox();
        btnConfirm = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        tbTicket_tfCpf = new javax.swing.JTextField();
        tbTicket_lbCpf = new javax.swing.JLabel();
        tbTicket_lbPrice = new javax.swing.JLabel();
        tbTickect_tfPrice = new javax.swing.JTextField();
        tbTickect_tfPrice.setEnabled(false);
        tbTickect_tfPrice.setEditable(false);
        
        // BUTTON GROUPS
        	btnGroupMenu.add(tbRoom_rd3D);
        	btnGroupMenu.add(tbRoom_rdNormal);
        // POVOAMENTO DE VETORES
        
	        // CATEGORIAS
	        vectorCategory.add("Ação");
	        vectorCategory.add("Aventura");
	        vectorCategory.add("Romance");
	        vectorCategory.add("Infantil");
	        vectorCategory.add("Animação");
	        vectorCategory.add("Terror");
	        
	        // CLASSIFICAÇÃO
	        vectorClassification.add("Livre");	        
	        vectorClassification.add("10 anos");
	        vectorClassification.add("12 anos");
	        vectorClassification.add("16 anos");
            vectorClassification.add("18 anos");
            
            // HORAS
            vectorSessionHr.add("10");
            vectorSessionHr.add("14");
            vectorSessionHr.add("16");
            vectorSessionHr.add("18");
            vectorSessionHr.add("20");
            vectorSessionHr.add("22");
            
            // MINUTOS
            vectorSessionMin.add("00");
            vectorSessionMin.add("20");
            vectorSessionMin.add("40");

            

            //ANOS
	        for (int i = 2019; i <= 2050; i++) {
                vectorSessionYear.add(i);
            }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbMenu.setText("Menu");

        btnMovie.setText("Add/Edit Movie");
        btnMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovieActionPerformed(evt);
            }
        });

        btnRoom.setText("Add/Edit Room");
        btnRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRoomActionPerformed(evt);
            }
        });

        btnSession.setText("Add/Edit Session");

        btnTicket.setText("Add/Edit Ticket");

        rdCreate.setText("Create");

        rdEdit.setText("Edit");

        rdSearch.setText("Search");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(lbMenu))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSession, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rdCreate)
                            .addComponent(rdEdit)
                            .addComponent(rdSearch)
                            .addComponent(btnRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMovie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMovie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRoom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSession)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTicket)
                .addGap(18, 18, 18)
                .addComponent(rdCreate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbMovie_title.setText("Movie");

        tbMovie_lbTitle.setText("Title");

        tbMovie_tfTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMovie_tfTitleActionPerformed(evt);
            }
        });

        tbMovie_lbDirector.setText("Director");

        tbMovie_tfDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMovie_tfDirectorActionPerformed(evt);
            }
        });

        tbMovie_lbCategory.setText("Category");

        tbMovie_lbClassification.setText("Classification");

        tbMovie_lbDescription.setText("Description");

        tbMovie_taDescription.setColumns(20);
        tbMovie_taDescription.setRows(5);
        jScrollPane1.setViewportView(tbMovie_taDescription);

        tbMovie_lbDuration.setText("Duration");

        jLabel9.setText(":");

        tbMovie_btnConfirm.setText("Confirm");
        tbMovie_btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMovie_btnConfirmActionPerformed(evt);
            }
        });

        tbMovie_btnClear.setText("Clear");
        tbMovie_btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMovie_btnClearActionPerformed(evt);
            }
        });

        tbMovie_cbClassification.setModel(new DefaultComboBoxModel(vectorClassification));
		tbMovie_cbClassification.setSelectedIndex(-1);
		tbMovie_cbClassification.setEditable(true);
		JTextField text_tbMovie_cbClassification = (JTextField)tbMovie_cbClassification.getEditor().getEditorComponent();
		text_tbMovie_cbClassification.setFocusable(true);
		text_tbMovie_cbClassification.setText("");
		text_tbMovie_cbClassification.addKeyListener(new ComboListener(tbMovie_cbClassification,vectorClassification));
		
        tbMovie_cbCategory.setModel(new DefaultComboBoxModel(vectorCategory));
		tbMovie_cbCategory.setSelectedIndex(-1);
		tbMovie_cbCategory.setEditable(true);
		JTextField text_tbMovie_cbCategory = (JTextField)tbMovie_cbCategory.getEditor().getEditorComponent();
		text_tbMovie_cbCategory.setFocusable(true);
		text_tbMovie_cbCategory.setText("");
		text_tbMovie_cbCategory.addKeyListener(new ComboListener(tbMovie_cbCategory,vectorCategory));
		tbMovie_cbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMovie_cbcategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnMovieLayout = new javax.swing.GroupLayout(pnMovie);
        pnMovie.setLayout(pnMovieLayout);
        pnMovieLayout.setHorizontalGroup(
            pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMovieLayout.createSequentialGroup()
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnMovieLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tbMovie_lbTitle)
                        .addGap(173, 173, 173)
                        .addComponent(tbMovie_lbDescription))
                    .addGroup(pnMovieLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(tbMovie_title)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnMovieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tbMovie_lbDirector)
                        .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbMovie_cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbMovie_lbCategory)
                            .addComponent(tbMovie_tfDirector, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(tbMovie_tfTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tbMovie_lbClassification)
                    .addComponent(tbMovie_cbClassification, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(tbMovie_lbDuration)
                    .addGroup(pnMovieLayout.createSequentialGroup()
                        .addComponent(tbMovie_spDurHr, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tbMovie_spDurationMin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(95, 95, 95))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnMovieLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tbMovie_btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbMovie_btnConfirm)
                .addContainerGap())
        );
        pnMovieLayout.setVerticalGroup(
            pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMovieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbMovie_title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbMovie_lbTitle)
                    .addComponent(tbMovie_lbDescription))
                .addGap(14, 14, 14)
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnMovieLayout.createSequentialGroup()
                        .addComponent(tbMovie_tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbMovie_lbDirector)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbMovie_tfDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbMovie_lbCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbMovie_cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbMovie_lbDuration)
                    .addComponent(tbMovie_lbClassification))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbMovie_cbClassification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbMovie_spDurHr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbMovie_spDurationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(0, 93, Short.MAX_VALUE)
                .addGroup(pnMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbMovie_btnClear)
                    .addComponent(tbMovie_btnConfirm))
                .addContainerGap())
        );

        tbPannel.addTab("Movie", pnMovie);

        tbRoom_title.setText("Room");

        tbRoom_lbId.setText("ID");

        tbRoom_tfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbRoom_tfIdActionPerformed(evt);
            }
        });

        tbRoom_lbOcupation.setText("Ocupation");

        tbRoom_lbPrice.setText("Price U$");

        tbRoom_cbDefault.setText("Default");

        btnTypeContent.setPreferredSize(new java.awt.Dimension(190, 100));

        tbRoom_rdNormal.setText("Normal");
        tbRoom_rdNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbRoom_rdNormalActionPerformed(evt);
            }
        });

        tbRoom_rd3D.setText("3D");

        javax.swing.GroupLayout btnTypeContentLayout = new javax.swing.GroupLayout(btnTypeContent);
        btnTypeContent.setLayout(btnTypeContentLayout);
        btnTypeContentLayout.setHorizontalGroup(
            btnTypeContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnTypeContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnTypeContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbRoom_rdNormal)
                    .addComponent(tbRoom_rd3D))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        btnTypeContentLayout.setVerticalGroup(
            btnTypeContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnTypeContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbRoom_rdNormal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbRoom_rd3D)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        tbRoom_lbTitle.setText("Type");

        tbRoom_btnConfirm.setText("Confirm");

        tbRoom_btnClear.setText("Clear");

        javax.swing.GroupLayout pmRoomLayout = new javax.swing.GroupLayout(pmRoom);
        pmRoom.setLayout(pmRoomLayout);
        pmRoomLayout.setHorizontalGroup(
            pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pmRoomLayout.createSequentialGroup()
                .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pmRoomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbRoom_tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pmRoomLayout.createSequentialGroup()
                                .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbRoom_spOcupation, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbRoom_lbOcupation))
                                .addGap(18, 18, 18)
                                .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbRoom_lbPrice)
                                    .addComponent(tbRoom_spPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbRoom_cbDefault))))
                        .addGap(22, 22, 22)
                        .addComponent(btnTypeContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pmRoomLayout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(tbRoom_title))
                    .addGroup(pmRoomLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tbRoom_lbId)
                        .addGap(185, 185, 185)
                        .addComponent(tbRoom_lbTitle)))
                .addGap(47, 98, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pmRoomLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(tbRoom_btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbRoom_btnConfirm)
                .addContainerGap())
        );
        pmRoomLayout.setVerticalGroup(
            pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pmRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbRoom_title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbRoom_lbId)
                    .addComponent(tbRoom_lbTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pmRoomLayout.createSequentialGroup()
                        .addComponent(tbRoom_tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tbRoom_lbOcupation)
                            .addComponent(tbRoom_lbPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tbRoom_spOcupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbRoom_spPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbRoom_cbDefault))
                    .addComponent(btnTypeContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(pmRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbRoom_btnConfirm)
                    .addComponent(tbRoom_btnClear))
                .addContainerGap())
        );

        tbPannel.addTab("Room", pmRoom);

        tbSession_title.setText("Session");
        
        tbSession_cbMovie.setModel(new DefaultComboBoxModel(vectorMovies));
		tbSession_cbMovie.setSelectedIndex(-1);
		tbSession_cbMovie.setEditable(true);
		JTextField text_tbSession_cbMovie = (JTextField)tbSession_cbMovie.getEditor().getEditorComponent();
		text_tbSession_cbMovie.setFocusable(true);
		text_tbSession_cbMovie.setText("");
		text_tbSession_cbMovie.addKeyListener(new ComboListener(tbSession_cbMovie,vectorMovies));
		tbSession_cbMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbSession_cbMovieActionPerformed(evt);
            }
        });

        tbSession_lbRoom.setText("Room");

		tbSession_cbRoom.setModel(new DefaultComboBoxModel(vectorRooms));
		tbSession_cbRoom.setSelectedIndex(-1);
		tbSession_cbRoom.setEditable(true);
		JTextField text_tbSession_cbRoom = (JTextField)tbSession_cbRoom.getEditor().getEditorComponent();
		text_tbSession_cbRoom.setFocusable(true);
		text_tbSession_cbRoom.setText("");
		text_tbSession_cbRoom.addKeyListener(new ComboListener(tbSession_cbRoom,vectorRooms));

        tbSession_cbRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbSession_cbRoomActionPerformed(evt);
            }
        });

        tbSession_lbMovie.setText("Movie");

        tbSession_lbTime.setText("Date");

		tbSession_cbDay = new JComboBox();
		tbSession_cbDay.setModel(new DefaultComboBoxModel(vectorSessionDays));
		// tbSession_cbDay.setSelectedIndex(-1);
		// tbSession_cbDay.setEditable(true);
		// JTextField text_tbSession_cbDay = (JTextField)tbSession_cbDay.getEditor().getEditorComponent();
		// text_tbSession_cbDay.setFocusable(true);
		// text_tbSession_cbDay.setText("");

		tbSession_cbMounth = new JComboBox();
		tbSession_cbMounth.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) throws NullPointerException {
                int lim = 1;
                if ((tbSession_cbMounth.getSelectedItem() != null && tbSession_cbYear.getSelectedItem() != null)) {
                    int mouth = Integer.parseInt(tbSession_cbMounth.getSelectedItem().toString());
                    int year = Integer.parseInt(tbSession_cbYear.getSelectedItem().toString());
                    if (mouth == 2) {
                        if (year % 4 == 0)
                        lim = 29;
                        else lim = 28;
                    } else if (mouth != 2 &&((mouth < 7 == true && mouth % 2 == 0) ||((mouth >= 7 == true && mouth % 2 != 0)))) {
                        lim = 31;
                    } else lim = 30; 
                }
                vectorSessionDays.clear();
                for (int i = 1; i <= lim; i++) {
                    vectorSessionDays.add(i);
                    
                }
			}
		});
		tbSession_cbMounth.setModel(new DefaultComboBoxModel(vectorSessionMouth));
		tbSession_cbMounth.setSelectedIndex(1);
		// tbSession_cbMounth.setEditable(true);
		// JTextField text_tbSession_cbMounth = (JTextField)tbSession_cbMounth.getEditor().getEditorComponent();
		// text_tbSession_cbMounth.setFocusable(true);
		// text_tbSession_cbMounth.setText("0");
		// text_tbSession_cbMounth.addKeyListener(new ComboListener(tbSession_cbMounth,vectorSessionMouth));

        tbSession_cbYear = new JComboBox();
        tbSession_cbYear.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) throws NullPointerException {
                int lim = 1;
                if ((tbSession_cbMounth.getSelectedItem() != null && tbSession_cbYear.getSelectedItem() != null)) {
                    int mouth = Integer.parseInt(tbSession_cbMounth.getSelectedItem().toString());
                    System.out.println(mouth);
                    int year = Integer.parseInt(tbSession_cbYear.getSelectedItem().toString());
                    if (mouth == 2) {
                        if (year % 4 == 0)
                        lim = 29;
                        else lim = 28;
                    } else if (mouth != 2 &&((mouth < 7 == true && mouth % 2 == 0) ||((mouth >= 7 == true && mouth % 2 != 0)))) {
                        lim = 31;
                    } else lim = 30; 
                }
                vectorSessionDays.clear();
                for (int i = 1; i <= lim; i++) {
                    vectorSessionDays.add(i);
                }
			}
		});

        tbSession_cbYear.setModel(new DefaultComboBoxModel(vectorSessionYear));
		tbSession_cbYear.setSelectedIndex(1);
		// tbSession_cbYear.setEditable(true);
		// JTextField tbSession_cbYear_text = (JTextField)tbSession_cbYear.getEditor().getEditorComponent();
		// tbSession_cbYear_text.setFocusable(true);
		// tbSession_cbYear_text.setText("");
		// tbSession_cbYear_text.addKeyListener(new ComboListener(tbSession_cbYear,vectorSessionYear));
        
        tbSession_btnConfirm.setText("Confirm");

        tbSession_btnClear.setText("Clear");

        tbSession_lbtime.setText("Time");

		tbSession_cbHr = new JComboBox();
		tbSession_cbHr.setModel(new DefaultComboBoxModel(vectorSessionHr));
		tbSession_cbHr.setSelectedIndex(1);
		// tbSession_cbHr.setEditable(true);
		// JTextField text_tbSession_cbHr = (JTextField)tbSession_cbHr.getEditor().getEditorComponent();
		// text_tbSession_cbHr.setFocusable(true);
		// text_tbSession_cbHr.setText("");
		// text_tbSession_cbHr.addKeyListener(new ComboListener(tbSession_cbHr,vectorSessionHr));
        
        tbSession_cbMin = new JComboBox();
		tbSession_cbMin.setModel(new DefaultComboBoxModel(vectorSessionMin));
		tbSession_cbMin.setSelectedIndex(1);
		// tbSession_cbMin.setEditable(true);
		// JTextField text_tbSession_cbMin = (JTextField)tbSession_cbMin.getEditor().getEditorComponent();
		// text_tbSession_cbMin.setFocusable(true);
		// text_tbSession_cbMin.setText("");
		// text_tbSession_cbMin.addKeyListener(new ComboListener(tbSession_cbMin,vectorSessionMin));

        javax.swing.GroupLayout pnSessionLayout = new javax.swing.GroupLayout(pnSession);
        pnSessionLayout.setHorizontalGroup(
        	pnSessionLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnSessionLayout.createSequentialGroup()
        			.addGroup(pnSessionLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(pnSessionLayout.createSequentialGroup()
        					.addGap(0, 481, Short.MAX_VALUE)
        					.addComponent(tbSession_btnClear)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(tbSession_btnConfirm))
        				.addGroup(pnSessionLayout.createSequentialGroup()
        					.addContainerGap()
        					.addGroup(pnSessionLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(tbSession_cbRoom, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tbSession_lbMovie)
        						.addComponent(tbSession_cbMovie, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tbSession_lbRoom))
        					.addGap(18)
        					.addGroup(pnSessionLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(pnSessionLayout.createSequentialGroup()
        							.addGroup(pnSessionLayout.createParallelGroup(Alignment.LEADING)
        								.addGroup(pnSessionLayout.createSequentialGroup()
        									.addGap(129)
        									.addComponent(tbSession_title))
        								.addComponent(tbSession_lbTime))
        							.addPreferredGap(ComponentPlacement.RELATED, 260, Short.MAX_VALUE))
        						.addGroup(pnSessionLayout.createSequentialGroup()
        							.addComponent(tbSession_lbtime)
        							.addGap(1, 403, Short.MAX_VALUE))
        						.addGroup(pnSessionLayout.createSequentialGroup()
        							.addGroup(pnSessionLayout.createParallelGroup(Alignment.TRAILING, false)
        								.addComponent(tbSession_cbHr, Alignment.LEADING, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        								.addComponent(tbSession_cbDay, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE))
        							.addGap(18)
        							.addGroup(pnSessionLayout.createParallelGroup(Alignment.TRAILING, false)
        								.addComponent(tbSession_cbMin, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        								.addComponent(tbSession_cbMounth, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE))
        							.addGap(18)
        							.addComponent(tbSession_cbYear, 0, 219, Short.MAX_VALUE)))))
        			.addContainerGap())
        );
        pnSessionLayout.setVerticalGroup(
        	pnSessionLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnSessionLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(tbSession_title)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnSessionLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbSession_lbRoom)
        				.addComponent(tbSession_lbTime))
        			.addGap(7)
        			.addGroup(pnSessionLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(pnSessionLayout.createSequentialGroup()
        					.addComponent(tbSession_cbRoom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(tbSession_lbMovie)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(tbSession_cbMovie, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(pnSessionLayout.createSequentialGroup()
        					.addGroup(pnSessionLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(tbSession_cbDay, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tbSession_cbMounth, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tbSession_cbYear, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(tbSession_lbtime)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(pnSessionLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(tbSession_cbHr, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(tbSession_cbMin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
        			.addPreferredGap(ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
        			.addGroup(pnSessionLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbSession_btnConfirm)
        				.addComponent(tbSession_btnClear))
        			.addContainerGap())
        );
        pnSession.setLayout(pnSessionLayout);

        tbPannel.addTab("Session", pnSession);

        tbTicket_title.setText("BuyPass");

        tbTicket_lbMovie.setText("Movie");


        tbTicket_cbMovie = new JComboBox();
		tbTicket_cbMovie.setModel(new DefaultComboBoxModel(vectorMovies));
		tbTicket_cbMovie.setSelectedIndex(-1);
		tbTicket_cbMovie.setEditable(true);
		JTextField text_tbTicket_cbMovie = (JTextField)tbTicket_cbMovie.getEditor().getEditorComponent();
		text_tbTicket_cbMovie.setFocusable(true);
		text_tbTicket_cbMovie.setText("");
		text_tbTicket_cbMovie.addKeyListener(new ComboListener(tbTicket_cbMovie,vectorMovies));
        tbTicket_cbMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            	tbTicket_cbRoom.setSelectedIndex(-1);
            	vectorTicketRooms.clear();
        		if (tbTicket_cbMovie.getSelectedItem() != null) {
					System.out.print("ok 1");
        			for (Room r : vectorRooms) {
        				System.out.print(r);
        				for (Session s : r.getSessionList()) {
        					if (s.getMovie().toString().equals(tbTicket_cbMovie.getSelectedItem().toString())) {
        						System.out.print("ok");
        						vectorTicketRooms.add(s.getRoom());
        					}
        				}
        			}
        		}
            }
        });

        tbTicket_lbName.setText("Name");

        tbTicket_tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTicket_tfNameActionPerformed(evt);
            }
        });

        tbTicket_lbAge.setText("Age");

        tbTicket_cbStudy.setText("I'm Study");
        tbTicket_cbStudy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTicket_cbStudyActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");

        btnClear.setText("Clear");

        tbTicket_lbCpf.setText("CPF");

        tbTicket_lbPrice.setText("Price (U$)");

        tbTickect_tfPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbTickect_tfPriceActionPerformed(evt);
            }
        });
        
        JLabel tbTicket_lbRoom = new JLabel("Room");
        
        tbTicket_cbRoom = new JComboBox();
		tbTicket_cbRoom.setModel(new DefaultComboBoxModel(vectorTicketRooms));
		tbTicket_cbRoom.setSelectedIndex(-1);
        tbTicket_cbRoom.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		tbTicket_cbStudyActionPerformed(e);
        	}
        });

        javax.swing.GroupLayout pnTicketLayout = new javax.swing.GroupLayout(pnTicket);
        pnTicketLayout.setHorizontalGroup(
        	pnTicketLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnTicketLayout.createSequentialGroup()
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(pnTicketLayout.createSequentialGroup()
        					.addGap(0, 471, Short.MAX_VALUE)
        					.addComponent(btnClear))
        				.addGroup(pnTicketLayout.createSequentialGroup()
        					.addGroup(pnTicketLayout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(tbTicket_tfName, GroupLayout.PREFERRED_SIZE, 265, GroupLayout.PREFERRED_SIZE)
        						.addGroup(pnTicketLayout.createParallelGroup(Alignment.LEADING)
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addGap(188)
        								.addComponent(tbTicket_title))
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addContainerGap()
        								.addComponent(tbTicket_lbMovie))
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addContainerGap()
        								.addComponent(tbTicket_lbName))
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addContainerGap()
        								.addComponent(tbTicket_cbMovie, GroupLayout.PREFERRED_SIZE, 265, GroupLayout.PREFERRED_SIZE))
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addContainerGap()
        								.addComponent(tbTicket_lbAge))
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addContainerGap()
        								.addComponent(tbTicket_spAge, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
        								.addGap(18)
        								.addComponent(tbTicket_cbStudy))
        							.addGroup(pnTicketLayout.createSequentialGroup()
        								.addContainerGap()
        								.addGroup(pnTicketLayout.createParallelGroup(Alignment.LEADING)
        									.addComponent(tbTicket_lbCpf)
        									.addComponent(tbTicket_tfCpf, GroupLayout.PREFERRED_SIZE, 159, GroupLayout.PREFERRED_SIZE)))))
        					.addGap(18)
        					.addGroup(pnTicketLayout.createParallelGroup(Alignment.LEADING, false)
        						.addComponent(tbTicket_lbRoom)
        						.addComponent(tbTicket_lbPrice)
        						.addComponent(tbTickect_tfPrice, 235, 235, Short.MAX_VALUE)
        						.addComponent(tbTicket_cbRoom, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(btnConfirm)
        			.addContainerGap())
        );
        pnTicketLayout.setVerticalGroup(
        	pnTicketLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnTicketLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(tbTicket_title)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbTicket_lbMovie)
        				.addComponent(tbTicket_lbRoom))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbTicket_cbMovie, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(tbTicket_cbRoom, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbTicket_lbName)
        				.addComponent(tbTicket_lbPrice))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbTicket_tfName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(tbTickect_tfPrice, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(tbTicket_lbAge)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(tbTicket_spAge, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(tbTicket_cbStudy))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(tbTicket_lbCpf)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(tbTicket_tfCpf, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
        			.addGroup(pnTicketLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnConfirm)
        				.addComponent(btnClear))
        			.addContainerGap())
        );
        pnTicket.setLayout(pnTicketLayout);

        tbPannel.addTab("Ticket", pnTicket);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbPannel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tbPannel)
        );

        pack();
        tbRoom_cbDefault.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if (tbRoom_cbDefault.isSelected()) {
        			tbRoom_spPrice.setEnabled(false);
        		} else {
        			tbRoom_spPrice.setValue(0);
        			tbRoom_spPrice.setEnabled(true);
        		}
        	}
        });
        
        tbRoom_rd3D.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
            	if (tbRoom_cbDefault.isSelected())
                	tbRoom_spPrice.setValue(30);
        	}
        });
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }                                          

    private void btnMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovieActionPerformed
        // TODO add your handling code here:
        tbPannel.setSelectedComponent(pnMovie);
    }//GEN-LAST:event_btnMovieActionPerformed

    private void btnRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoomActionPerformed
    // TODO add your handling code here:
    	tbPannel.setSelectedIndex(1);
    }//GEN-LAST:event_btnRoomActionPerformed

    private void btnSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoomActionPerformed
    // TODO add your handling code here:
    	tbPannel.setSelectedIndex(2);
    }//GEN-LAST:event_btnRoomActionPerformed

    private void btnTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoomActionPerformed
    // TODO add your handling code here:
    	tbPannel.setSelectedIndex(3);
    }//GEN-LAST:event_btnRoomActionPerformed


    private void tbTickect_tfPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTickect_tfPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTickect_tfPriceActionPerformed

    private void tbTicket_cbStudyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTicket_cbStudyActionPerformed
        // TODO add your handling code here:
    	double Price = 0;
        if (tbTicket_cbRoom.getSelectedItem() != null) {
            for (Room room : vectorTicketRooms) {
                if (room.toString().equals(tbTicket_cbRoom.getSelectedItem().toString())) {
                    Price = room.getPrice();
                }
            }
            if (Integer.parseInt(tbTicket_spAge.getValue().toString()) <= 18 || tbTicket_cbStudy.isSelected()) {
                Price = Price /2;
            }
            tbTickect_tfPrice.setText(Double.toString(Price));
        }

    }//GEN-LAST:event_tbTicket_cbStudyActionPerformed

    private void tbTicket_tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbTicket_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbTicket_tfNameActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void tbSession_cbMounthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbSession_cbDayActionPerformed
        // TODO add your handling code here:
        System.out.println(tbSession_cbMounth.getSelectedItem());

    }//GEN-LAST:event_tbSession_cbDayActionPerformed

    private void tbSession_cbRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbSession_cbRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbSession_cbRoomActionPerformed

    private void tbSession_cbMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbSession_cbMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbSession_cbMovieActionPerformed

    private void tbRoom_rdNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbRoom_rdNormalActionPerformed
        // TODO add your handling code here:
    	if (tbRoom_cbDefault.isSelected())
    	tbRoom_spPrice.setValue(25);
    }//GEN-LAST:event_tbRoom_rdNormalActionPerformed

    private void tbRoom_tfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbRoom_tfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbRoom_tfIdActionPerformed

    private void tbMovie_cbcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMovie_cbcategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbMovie_cbcategoryActionPerformed

    private void tbMovie_btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMovie_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbMovie_btnClearActionPerformed

    private void tbMovie_btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMovie_btnConfirmActionPerformed
        // TODO add your handling code here:
    	
    	String h;
    	if (tbMovie_spDurHr.getValue().toString().length() < 2)
    	h= "0"+tbMovie_spDurHr.getValue().toString();
    	else h = tbMovie_spDurHr.getValue().toString();
    	
    	String m;
    	if (tbMovie_spDurationMin.getValue().toString().length() < 2)
    	m= "0"+tbMovie_spDurationMin.getValue().toString();
    	else m = tbMovie_spDurationMin.getValue().toString();
    	
    	Movie movie = new Movie(LocalTime.parse(h+":"+m),tbMovie_tfTitle.getText(),tbMovie_tfDirector.getText(),tbMovie_cbCategory.getSelectedItem().toString(),tbMovie_taDescription.getText());
    	vectorMovies.add(movie);
    }//GEN-LAST:event_tbMovie_btnConfirmActionPerformed

    private void tbMovie_tfDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMovie_tfDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbMovie_tfDirectorActionPerformed

    private void tbMovie_tfTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMovie_tfTitleActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_tbMovie_tfTitleActionPerformed
    
    private void btnRoom_btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    	if (tbRoom_rd3D.isSelected())
    		vectorRooms.add(new Room3d(tbRoom_tfId.getText(),Integer.parseInt(tbRoom_spOcupation.getValue().toString()),Double.parseDouble(tbRoom_spPrice.getValue().toString())));
    	else if (tbRoom_rdNormal.isSelected()) {
    		vectorRooms.add(new RoomNormal(tbRoom_tfId.getText(),Integer.parseInt(tbRoom_spOcupation.getValue().toString()),Double.parseDouble(tbRoom_spPrice.getValue().toString())));	
    	}
    }//GEN-LAST:event_tbMovie_tfTitleActionPerformed

    private void tbSession_btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {
        String Mounth;
        String Year = tbSession_cbYear.getSelectedItem().toString();
        if (tbSession_cbMounth.getSelectedItem().toString().length() <  2 ) 
            Mounth = "0"+tbSession_cbMounth.getSelectedItem().toString();
        else Mounth = tbSession_cbMounth.getSelectedItem().toString();
        String Day;
        if (tbSession_cbDay.getSelectedItem().toString().length() <  2 ) 
            Day = "0"+tbSession_cbDay.getSelectedItem().toString();
        else Day = tbSession_cbDay.getSelectedItem().toString();

        LocalDate date = LocalDate.parse(Year+"-"+Mounth+"-"+Day);
           System.out.println(date);
           String h, m;
           if (tbSession_cbHr.getSelectedItem().toString().length() < 2) {
               h = "0"+tbSession_cbHr.getSelectedItem().toString();
           } else h = tbSession_cbHr.getSelectedItem().toString();
           if (tbSession_cbMin.getSelectedItem().toString().length() < 2) {
               m = "0"+tbSession_cbHr.getSelectedItem().toString();
           } else m = tbSession_cbHr.getSelectedItem().toString();
           
           System.out.println(h+":"+m);
           LocalTime time = LocalTime.parse(h+":"+m);
           Movie movie = getMovieFromVector(tbSession_cbMovie.getSelectedItem().toString(),  vectorMovies);
           Room r = getRoomFromVector(tbSession_cbRoom.getSelectedItem().toString(), vectorRooms);
           System.out.println(r);
           System.out.println(movie.getClass());
           Session s = new Session(r,movie,date,time);
           if (r.addSessio(s)) {
               vectorSessions.add(s);
               System.out.println(s.toString());
           } else System.out.println("Error");
    }

    private Movie getMovieFromVector(String movie, Vector<Movie> vectorMovie) throws NullPointerException {
        for (Movie mov : vectorMovie) {
            if (mov.toString().equals(movie)) {
                return mov;
            }
        }
        return null;
    }

    private Room getRoomFromVector(String room, Vector<Room> vectorRooms) throws NullPointerException {
        for (Room r : vectorRooms) {
            if (r.toString().equals(room)) {
                // System.out.println("JAKATA");
                return r;
            }
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConfirm;
    private javax.swing.ButtonGroup btnGroupMenu;
    private javax.swing.ButtonGroup btnGroupType;
    private javax.swing.JButton btnMovie;
    private javax.swing.JButton btnRoom;
    private javax.swing.JButton btnSession;
    private javax.swing.JButton btnTicket;
    private javax.swing.JPanel btnTypeContent;
    private javax.swing.JComboBox<String> tbTicket_cbMovie;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbMenu;
    private javax.swing.JComboBox<String> tbSession_cbMovie;
    private javax.swing.JPanel pmRoom;
    private javax.swing.JPanel pnMovie;
    private javax.swing.JPanel pnSession;
    private javax.swing.JPanel pnTicket;
    private javax.swing.JRadioButton rdCreate;
    private javax.swing.JRadioButton rdEdit;
    private javax.swing.JRadioButton rdSearch;
    private javax.swing.JButton tbMovie_btnClear;
    private javax.swing.JButton tbMovie_btnConfirm;
    private javax.swing.JComboBox<String> tbMovie_cbClassification;
    private javax.swing.JComboBox<String> tbMovie_cbCategory;
    private javax.swing.JLabel tbMovie_lbCategory;
    private javax.swing.JLabel tbMovie_lbClassification;
    private javax.swing.JLabel tbMovie_lbDescription;
    private javax.swing.JLabel tbMovie_lbDirector;
    private javax.swing.JLabel tbMovie_lbDuration;
    private javax.swing.JLabel tbMovie_lbTitle;
    private javax.swing.JSpinner tbMovie_spDurHr;
    private javax.swing.JSpinner tbMovie_spDurationMin;
    private javax.swing.JTextArea tbMovie_taDescription;
    private javax.swing.JTextField tbMovie_tfDirector;
    private javax.swing.JTextField tbMovie_tfTitle;
    private javax.swing.JLabel tbMovie_title;
    private javax.swing.JTabbedPane tbPannel;
    private javax.swing.JButton tbRoom_btnClear;
    private javax.swing.JButton tbRoom_btnConfirm;
    private javax.swing.JCheckBox tbRoom_cbDefault;
    private javax.swing.JLabel tbRoom_lbId;
    private javax.swing.JLabel tbRoom_lbOcupation;
    private javax.swing.JLabel tbRoom_lbPrice;
    private javax.swing.JLabel tbRoom_lbTitle;
    private javax.swing.JRadioButton tbRoom_rd3D;
    private javax.swing.JRadioButton tbRoom_rdNormal;
    private javax.swing.JSpinner tbRoom_spOcupation;
    private javax.swing.JSpinner tbRoom_spPrice;
    private javax.swing.JTextField tbRoom_tfId;
    private javax.swing.JLabel tbRoom_title;
    private javax.swing.JButton tbSession_btnClear;
    private javax.swing.JButton tbSession_btnConfirm;
    private javax.swing.JComboBox<String> tbSession_cbDay;
    private javax.swing.JComboBox<String> tbSession_cbHr;
    private javax.swing.JComboBox<String> tbSession_cbMin;
    private javax.swing.JComboBox<String> tbSession_cbMounth;
    private javax.swing.JComboBox<Room> tbSession_cbRoom;
    private javax.swing.JComboBox<String> tbSession_cbYear;
    private javax.swing.JLabel tbSession_lbMovie;
    private javax.swing.JLabel tbSession_lbRoom;
    private javax.swing.JLabel tbSession_lbTime;
    private javax.swing.JLabel tbSession_lbtime;
    private javax.swing.JLabel tbSession_title;
    private javax.swing.JTextField tbTickect_tfPrice;
    private javax.swing.JCheckBox tbTicket_cbStudy;
    private javax.swing.JLabel tbTicket_lbAge;
    private javax.swing.JLabel tbTicket_lbCpf;
    private javax.swing.JLabel tbTicket_lbName;
    private javax.swing.JComboBox<Room> tbTicket_cbRoom;
    private javax.swing.JLabel tbTicket_lbPrice;
    private javax.swing.JLabel tbTicket_lbMovie;
    private javax.swing.JSpinner tbTicket_spAge;
    private javax.swing.JTextField tbTicket_tfCpf;
    private javax.swing.JTextField tbTicket_tfName;
    private javax.swing.JLabel tbTicket_title;
}
